import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error


data = {
    'PlotArea': [6900000, 3500000, 5700000, 22500000, 46000000,5000000,900000],
    'Year': [2010, 2016, 2012, 2018, 2015,2012,2018],
    'Price': [6000, 12000, 8000, 15000, 10000,30000,40000]
    }
house_data=pd.DataFrame(data)
print("First 5 rows of the house dataset:")
print(house_data.head())

# c) Basic statistical computations on the dataset or distribution of data
print("\nStatistical summary of the house dataset:")
print(house_data.describe())

# d) Print columns and their data types
print("\nColumns and their data types:")
print(house_data.dtypes)

# e) Detect null values in the dataset and replace with mode value
print("\nNull value counts before replacing:")
print(house_data.isnull().sum())

# Replace null values with mode (most frequent value) for each column
house_data = house_data.fillna(house_data.mode().iloc[0])

print("\nNull value counts after replacing:")
print(house_data.isnull().sum())

# f) Explore the dataset using a heatmap
plt.figure(figsize=(10, 6))
sns.heatmap(house_data.corr(), annot=True, cmap='coolwarm', fmt='.2f', linewidths=0.5)
plt.title('Correlation Heatmap of House Data')
plt.show()

# g) Split the data into train and test sets
X = house_data.drop('Price', axis=1)
y = house_data['Price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# h) Predict the price of a house using Linear Regression
model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

# Optionally, evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f"\nMean Squared Error (MSE): {mse:.2f}")

